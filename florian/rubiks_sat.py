import os.path
import sys
import subprocess

#####################################################################################
###  Note this file is from Florian Aldeghi                                       ###
###  His code can be found on:                                                    ###
###    https://github.com/florian121212/Modeling-and-Solving-Problems-TFE         ###
###  This is from his paper:                                                      ###
###    Modeling and Solving Problems Using Propositional Logic and SAT Solvers    ###
#####################################################################################

# Rubik's cube 2x2 is define by 6 faces/colors (up:1, front:2, left:3, back:4, right:5, down:6)
#     with on each face, 4 facelets (up-left:1, up-right:2, down-left:3, down-right:4).
#
#         |0|1|
#         |2|3|
#     |0|1|0|1|0|1|0|1|
#     |2|3|2|3|2|3|2|3|
#         |0|1|
#         |2|3|

#input : a file name
#output : Rubik's cube representation
def read_file(filename):
    myfile = open(filename, 'r')
    rubiks = [[0 for i in range(4)] for j in range(6)]
    i = 0
    j = 0
    it = 0
    for line in myfile:
        for element in line:
            if it<24:
                it = it+1
                rubiks[i][j] = int(element)
                if int(element) > 5:
                    exit('number ' + str(element) + ' does not correspond to a color')
                j = (j+1)%4
                if j==0:
                    i = i+1
            else:
                return rubiks
    if it == 24:
        return rubiks
    exit('not enough characters (need 24 but only '+ str(it) + ')\n')

#input: -myfile: name of the file where to write the chain
#       -rubiks: Rubik's cube to write 
def print_rubiks(myfile, rubiks):
    myfile.write("    |"+ str(rubiks[0][0])+"|"+str(rubiks[0][1])+"|\n")
    myfile.write("    |"+ str(rubiks[0][2])+"|"+str(rubiks[0][3])+"|\n")
    myfile.write("|"+str(rubiks[2][0])+"|"+str(rubiks[2][1])+"|"+ str(rubiks[1][0])+"|"+str(rubiks[1][1])+"|"+str(rubiks[4][0])+"|"+str(rubiks[4][1])+"|"+str(rubiks[3][0])+"|"+str(rubiks[3][1])+"|\n")
    myfile.write("|"+str(rubiks[2][2])+"|"+str(rubiks[2][3])+"|"+ str(rubiks[1][2])+"|"+str(rubiks[1][3])+"|"+str(rubiks[4][2])+"|"+str(rubiks[4][3])+"|"+str(rubiks[3][2])+"|"+str(rubiks[3][3])+"|\n")
    myfile.write("    |"+ str(rubiks[5][0])+"|"+str(rubiks[5][1])+"|\n")
    myfile.write("    |"+ str(rubiks[5][2])+"|"+str(rubiks[5][3])+"|\n")
    return

#input: -myfile: name of the file where to write the moves 
#       -moves: list of moves
def print_moves(myfile, moves): 
    for move in moves:
        myfile.write(move+'\n')
    return

# input: maximum number of moves to solve the Rubik's cube 
# output: number of clauses in the sat encoding 
def nb_constraints(nb_moves):
    nb_constraints = 72 + 1 + nb_moves*(nb_moves+1)/2 + 108*(nb_moves+1) + 4*nb_moves + 21*nb_moves + 864*nb_moves + 3*(nb_moves-1)
    return nb_constraints

#input: -myfile: name of file where to write constraints
#       -rubiks: initial state of the rubik's cube   
#       -nb_moves: maximum number of moves to solve the cube   
def constraints(myfile, rubiks, nb_moves):

    def output(s):
        myfile.write(s)

#   i,j,k,l: face i(1->6), facelet j(1->4), state k(11->11+nb_moves), color bit l(1->3)
    def newlitcol(i,j,k,l):
        output(str(i)+str(j)+str(k)+str(l)+" ")

#   k: state k(11->11+nb_moves)
    def newlitsta(k):
        output(str(650)+str(k)+" ")

#   n,s,m: kind of movement n(1->3), step s(11->10+nb_moves), movement m(0->3)
    def newlitmov(n,s,m):
        output(str(7)+str(n)+str(s)+str(m)+" ")

#   i,j,k,c: face i(1->6), facelet j(1->4), state k(11->11+nb_moves), color c(0->5)
    def newcol(i,j,k,c):
        if (c<4):
            output("-")
        newlitcol(i,j,k,1)
        newcl()
        if (c<2 or c>3):
            output("-")
        newlitcol(i,j,k,2)
        newcl()
        if (c == 0 or c == 2 or c == 4):
            output("-")
        newlitcol(i,j,k,3)
        newcl()

    def newcl():
        output("0\n")

    def newcomment(s):
        output("c %s\n"%s)
    
    #initial state (72 clauses)
    for i in range(6):
        for j in range(4):   
            newcol(i+1,j+1,11,int(rubiks[i][j]))
             
    #at least one solved state (1 clause)
    for k in range(11,12+nb_moves):
        newlitsta(k)
    newcl()

    #at most one solved state (nb_moves*(nb_moves+1)/2 clauses)
    for k in range(11,11+nb_moves):
        for k1 in range(i+1,12+nb_moves):
            output("-")
            newlitsta(k)
            output("-")
            newlitsta(k1)
            newcl()

    #definition of solved state (108*(nb_moves+1) clauses)
    for k in range(11,12+nb_moves):
        for i in range(1,7):
            for j in range(1,4):
                for l in range(1,4):
                    output("-")
                    newlitsta(k)
                    newlitcol(i,j,k,l)
                    output("-")
                    newlitcol(i,4,k,l)
                    newcl()
                    output("-")
                    newlitsta(k)
                    output("-")
                    newlitcol(i,j,k,l)
                    newlitcol(i,4,k,l)
                    newcl()

    #kind of movement chosen (exactly one) (4*nb_moves clauses)
    for t in range(11,11+nb_moves):
        #at least one (nb_moves clauses)
        for m in range(1,4):
            newlitmov(m,t,0)
        newcl();
        #at most one (3*nb_moves clauses)
        for i in range(1,3):
            for j in range(i+1,4):
                output("-")
                newlitmov(i,t,0)
                output("-")
                newlitmov(j,t,0)
                newcl()

    #exact movement chosen (exactly one) (21*nb_moves clauses)
    for t in range(11,11+nb_moves):
        for m in range(1,4):
            #at least one if kind of move chosen(3*nb_moves clauses)
            output("-")
            newlitmov(m,t,0)
            for i in range(1,4):
                newlitmov(m,t,i)
            newcl()
            #at most one (9*nb_moves clauses)
            for i in range(1,3):
                for j in range(i+1,4):
                    output("-")
                    newlitmov(m,t,i)
                    output("-")
                    newlitmov(m,t,j)
                    newcl()
            #one move only if this type of move chosen (9*nb_moves clauses)
            for i in range(1,4):
                newlitmov(m,t,0)
                output("-")
                newlitmov(m,t,i)
                newcl()

    #state after a move (864*nb_moves clauses)
    for t in range(11,11+nb_moves):
        for l in range(1,4):
            # facelettes that do not move wrt the type of move (216*nb_moves)
            for j in range(1,5):
                for i in range(1,4):
                    output("-")
                    newlitmov(i,t,0)
                    output("-")
                    newlitcol(7-i,j,t,l)
                    newlitcol(7-i,j,t+1,l)
                    newcl()
                    output("-")
                    newlitmov(i,t,0)
                    newlitcol(7-i,j,t,l)
                    output("-")
                    newlitcol(7-i,j,t+1,l)
                    newcl()

            for i in range(2,6):
                for j in range(3,5):
                    output("-")
                    newlitmov(1,t,0)
                    output("-")
                    newlitcol(i,j,t,l)
                    newlitcol(i,j,t+1,l)
                    newcl()
                    output("-")
                    newlitmov(1,t,0)
                    newlitcol(i,j,t,l)
                    output("-")
                    newlitcol(i,j,t+1,l)
                    newcl()

            for i in [1,2,6]:
                for j in [2,4]:
                    output("-")
                    newlitmov(2,t,0)
                    output("-")
                    newlitcol(i,j,t,l)
                    newlitcol(i,j,t+1,l)
                    newcl()
                    output("-")
                    newlitmov(2,t,0)
                    newlitcol(i,j,t,l)
                    output("-")
                    newlitcol(i,j,t+1,l)
                    newcl()

            for j in [1,3]:
                output("-")
                newlitmov(2,t,0)
                output("-")
                newlitcol(4,j,t,l)
                newlitcol(4,j,t+1,l)
                newcl()
                output("-")
                newlitmov(2,t,0)
                newlitcol(4,j,t,l)
                output("-")
                newlitcol(4,j,t+1,l)
                newcl()

            output("-")
            newlitmov(3,t,0)
            output("-")
            newlitcol(1,1,t,l)
            newlitcol(1,1,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,0)
            newlitcol(1,1,t,l)
            output("-")
            newlitcol(1,1,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,0)
            output("-")
            newlitcol(1,2,t,l)
            newlitcol(1,2,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,0)
            newlitcol(1,2,t,l)
            output("-")
            newlitcol(1,2,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,0)
            output("-")
            newlitcol(3,1,t,l)
            newlitcol(3,1,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,0)
            newlitcol(3,1,t,l)
            output("-")
            newlitcol(3,1,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,0)
            output("-")
            newlitcol(3,3,t,l)
            newlitcol(3,3,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,0)
            newlitcol(3,3,t,l)
            output("-")
            newlitcol(3,3,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,0)
            output("-")
            newlitcol(5,2,t,l)
            newlitcol(5,2,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,0)
            newlitcol(5,2,t,l)
            output("-")
            newlitcol(5,2,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,0)
            output("-")
            newlitcol(5,4,t,l)
            newlitcol(5,4,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,0)
            newlitcol(5,4,t,l)
            output("-")
            newlitcol(5,4,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,0)
            output("-")
            newlitcol(6,4,t,l)
            newlitcol(6,4,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,0)
            newlitcol(6,4,t,l)
            output("-")
            newlitcol(6,4,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,0)
            output("-")
            newlitcol(6,3,t,l)
            newlitcol(6,3,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,0)
            newlitcol(6,3,t,l)
            output("-")
            newlitcol(6,3,t+1,l)
            newcl()

            #facelets that move wrt to the exact movement (648*nb_moves clauses)

            #move U
            for j in range(1,3):
                for i in range(2,5):
                    output("-")
                    newlitmov(1,t,1)
                    output("-")
                    newlitcol(i,j,t,l)
                    newlitcol(i+1,j,t+1,l)
                    newcl()
                    output("-")
                    newlitmov(1,t,1)
                    newlitcol(i,j,t,l)
                    output("-")
                    newlitcol(i+1,j,t+1,l)
                    newcl()

                output("-")
                newlitmov(1,t,1)
                output("-")
                newlitcol(5,j,t,l)
                newlitcol(2,j,t+1,l)
                newcl()
                output("-")
                newlitmov(1,t,1)
                newlitcol(5,j,t,l)
                output("-")
                newlitcol(2,j,t+1,l)
                newcl()

            output("-")
            newlitmov(1,t,1)
            output("-")
            newlitcol(1,1,t,l)
            newlitcol(1,2,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,1)
            newlitcol(1,1,t,l)
            output("-")
            newlitcol(1,2,t+1,l)
            newcl()

            output("-")
            newlitmov(1,t,1)
            output("-")
            newlitcol(1,2,t,l)
            newlitcol(1,4,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,1)
            newlitcol(1,2,t,l)
            output("-")
            newlitcol(1,4,t+1,l)
            newcl()

            output("-")
            newlitmov(1,t,1)
            output("-")
            newlitcol(1,4,t,l)
            newlitcol(1,3,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,1)
            newlitcol(1,4,t,l)
            output("-")
            newlitcol(1,3,t+1,l)
            newcl()

            output("-")
            newlitmov(1,t,1)
            output("-")
            newlitcol(1,3,t,l)
            newlitcol(1,1,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,1)
            newlitcol(1,3,t,l)
            output("-")
            newlitcol(1,1,t+1,l)
            newcl()

            #move U2
            for j in range(1,3):
                for i in range(2,6):
                    output("-")
                    newlitmov(1,t,2)
                    output("-")
                    newlitcol(i,j,t,l)
                    newlitcol(i%4+2,j,t+1,l)
                    newcl()
                    output("-")
                    newlitmov(1,t,2)
                    newlitcol(i,j,t,l)
                    output("-")
                    newlitcol(i%4+2,j,t+1,l)
                    newcl()

            output("-")
            newlitmov(1,t,2)
            output("-")
            newlitcol(1,1,t,l)
            newlitcol(1,4,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,2)
            newlitcol(1,1,t,l)
            output("-")
            newlitcol(1,4,t+1,l)
            newcl()

            output("-")
            newlitmov(1,t,2)
            output("-")
            newlitcol(1,2,t,l)
            newlitcol(1,3,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,2)
            newlitcol(1,2,t,l)
            output("-")
            newlitcol(1,3,t+1,l)
            newcl()

            output("-")
            newlitmov(1,t,2)
            output("-")
            newlitcol(1,4,t,l)
            newlitcol(1,1,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,2)
            newlitcol(1,4,t,l)
            output("-")
            newlitcol(1,1,t+1,l)
            newcl()

            output("-")
            newlitmov(1,t,2)
            output("-")
            newlitcol(1,3,t,l)
            newlitcol(1,2,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,2)
            newlitcol(1,3,t,l)
            output("-")
            newlitcol(1,2,t+1,l)
            newcl()

            #move U*
            for j in range(1,3):
                for i in range(3,6):
                    output("-")
                    newlitmov(1,t,3)
                    output("-")
                    newlitcol(i,j,t,l)
                    newlitcol(i-1,j,t+1,l)
                    newcl()
                    output("-")
                    newlitmov(1,t,3)
                    newlitcol(i,j,t,l)
                    output("-")
                    newlitcol(i-1,j,t+1,l)
                    newcl()

                output("-")
                newlitmov(1,t,3)
                output("-")
                newlitcol(2,j,t,l)
                newlitcol(5,j,t+1,l)
                newcl()
                output("-")
                newlitmov(1,t,3)
                newlitcol(2,j,t,l)
                output("-")
                newlitcol(5,j,t+1,l)
                newcl()

            output("-")
            newlitmov(1,t,3)
            output("-")
            newlitcol(1,1,t,l)
            newlitcol(1,3,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,3)
            newlitcol(1,1,t,l)
            output("-")
            newlitcol(1,3,t+1,l)
            newcl()

            output("-")
            newlitmov(1,t,3)
            output("-")
            newlitcol(1,2,t,l)
            newlitcol(1,1,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,3)
            newlitcol(1,2,t,l)
            output("-")
            newlitcol(1,1,t+1,l)
            newcl()

            output("-")
            newlitmov(1,t,3)
            output("-")
            newlitcol(1,4,t,l)
            newlitcol(1,2,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,3)
            newlitcol(1,4,t,l)
            output("-")
            newlitcol(1,2,t+1,l)
            newcl()

            output("-")
            newlitmov(1,t,3)
            output("-")
            newlitcol(1,3,t,l)
            newlitcol(1,4,t+1,l)
            newcl()
            output("-")
            newlitmov(1,t,3)
            newlitcol(1,3,t,l)
            output("-")
            newlitcol(1,4,t+1,l)
            newcl()

            #move L
            for j in [1,3]:
                output("-")
                newlitmov(2,t,1)
                output("-")
                newlitcol(1,j,t,l)
                newlitcol(2,j,t+1,l)
                newcl()
                output("-")
                newlitmov(2,t,1)
                newlitcol(1,j,t,l)
                output("-")
                newlitcol(2,j,t+1,l)
                newcl()

                output("-")
                newlitmov(2,t,1)
                output("-")
                newlitcol(2,j,t,l)
                newlitcol(6,j,t+1,l)
                newcl()
                output("-")
                newlitmov(2,t,1)
                newlitcol(2,j,t,l)
                output("-")
                newlitcol(6,j,t+1,l)
                newcl()

            output("-")
            newlitmov(2,t,1)
            output("-")
            newlitcol(6,1,t,l)
            newlitcol(4,4,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,1)
            newlitcol(6,1,t,l)
            output("-")
            newlitcol(4,4,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,1)
            output("-")
            newlitcol(6,3,t,l)
            newlitcol(4,2,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,1)
            newlitcol(6,3,t,l)
            output("-")
            newlitcol(4,2,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,1)
            output("-")
            newlitcol(4,4,t,l)
            newlitcol(1,1,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,1)
            newlitcol(4,4,t,l)
            output("-")
            newlitcol(1,1,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,1)
            output("-")
            newlitcol(4,2,t,l)
            newlitcol(1,3,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,1)
            newlitcol(4,2,t,l)
            output("-")
            newlitcol(1,3,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,1)
            output("-")
            newlitcol(3,1,t,l)
            newlitcol(3,2,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,1)
            newlitcol(3,1,t,l)
            output("-")
            newlitcol(3,2,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,1)
            output("-")
            newlitcol(3,2,t,l)
            newlitcol(3,4,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,1)
            newlitcol(3,2,t,l)
            output("-")
            newlitcol(3,4,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,1)
            output("-")
            newlitcol(3,4,t,l)
            newlitcol(3,3,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,1)
            newlitcol(3,4,t,l)
            output("-")
            newlitcol(3,3,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,1)
            output("-")
            newlitcol(3,3,t,l)
            newlitcol(3,1,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,1)
            newlitcol(3,3,t,l)
            output("-")
            newlitcol(3,1,t+1,l)
            newcl()

            #move L2
            for j in [1,3]:
                output("-")
                newlitmov(2,t,2)
                output("-")
                newlitcol(1,j,t,l)
                newlitcol(6,j,t+1,l)
                newcl()
                output("-")
                newlitmov(2,t,2)
                newlitcol(1,j,t,l)
                output("-")
                newlitcol(6,j,t+1,l)
                newcl()

                output("-")
                newlitmov(2,t,2)
                output("-")
                newlitcol(6,j,t,l)
                newlitcol(1,j,t+1,l)
                newcl()
                output("-")
                newlitmov(2,t,2)
                newlitcol(6,j,t,l)
                output("-")
                newlitcol(1,j,t+1,l)
                newcl()

            output("-")
            newlitmov(2,t,2)
            output("-")
            newlitcol(2,1,t,l)
            newlitcol(4,4,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,2)
            newlitcol(2,1,t,l)
            output("-")
            newlitcol(4,4,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,2)
            output("-")
            newlitcol(2,3,t,l)
            newlitcol(4,2,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,2)
            newlitcol(2,3,t,l)
            output("-")
            newlitcol(4,2,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,2)
            output("-")
            newlitcol(4,4,t,l)
            newlitcol(2,1,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,2)
            newlitcol(4,4,t,l)
            output("-")
            newlitcol(2,1,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,2)
            output("-")
            newlitcol(4,2,t,l)
            newlitcol(2,3,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,2)
            newlitcol(4,2,t,l)
            output("-")
            newlitcol(2,3,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,2)
            output("-")
            newlitcol(3,1,t,l)
            newlitcol(3,4,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,2)
            newlitcol(3,1,t,l)
            output("-")
            newlitcol(3,4,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,2)
            output("-")
            newlitcol(3,2,t,l)
            newlitcol(3,3,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,2)
            newlitcol(3,2,t,l)
            output("-")
            newlitcol(3,3,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,2)
            output("-")
            newlitcol(3,4,t,l)
            newlitcol(3,1,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,2)
            newlitcol(3,4,t,l)
            output("-")
            newlitcol(3,1,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,2)
            output("-")
            newlitcol(3,3,t,l)
            newlitcol(3,2,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,2)
            newlitcol(3,3,t,l)
            output("-")
            newlitcol(3,2,t+1,l)
            newcl()

            #move L*
            for j in [1,3]:
                output("-")
                newlitmov(2,t,3)
                output("-")
                newlitcol(6,j,t,l)
                newlitcol(2,j,t+1,l)
                newcl()
                output("-")
                newlitmov(2,t,3)
                newlitcol(6,j,t,l)
                output("-")
                newlitcol(2,j,t+1,l)
                newcl()

                output("-")
                newlitmov(2,t,3)
                output("-")
                newlitcol(2,j,t,l)
                newlitcol(1,j,t+1,l)
                newcl()
                output("-")
                newlitmov(2,t,3)
                newlitcol(2,j,t,l)
                output("-")
                newlitcol(1,j,t+1,l)
                newcl()

            output("-")
            newlitmov(2,t,3)
            output("-")
            newlitcol(1,1,t,l)
            newlitcol(4,4,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,3)
            newlitcol(1,1,t,l)
            output("-")
            newlitcol(4,4,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,3)
            output("-")
            newlitcol(1,3,t,l)
            newlitcol(4,2,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,3)
            newlitcol(1,3,t,l)
            output("-")
            newlitcol(4,2,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,3)
            output("-")
            newlitcol(4,4,t,l)
            newlitcol(6,1,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,3)
            newlitcol(4,4,t,l)
            output("-")
            newlitcol(6,1,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,3)
            output("-")
            newlitcol(4,2,t,l)
            newlitcol(6,3,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,3)
            newlitcol(4,2,t,l)
            output("-")
            newlitcol(6,3,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,3)
            output("-")
            newlitcol(3,1,t,l)
            newlitcol(3,3,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,3)
            newlitcol(3,1,t,l)
            output("-")
            newlitcol(3,3,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,3)
            output("-")
            newlitcol(3,2,t,l)
            newlitcol(3,1,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,3)
            newlitcol(3,2,t,l)
            output("-")
            newlitcol(3,1,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,3)
            output("-")
            newlitcol(3,4,t,l)
            newlitcol(3,2,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,3)
            newlitcol(3,4,t,l)
            output("-")
            newlitcol(3,2,t+1,l)
            newcl()

            output("-")
            newlitmov(2,t,3)
            output("-")
            newlitcol(3,3,t,l)
            newlitcol(3,4,t+1,l)
            newcl()
            output("-")
            newlitmov(2,t,3)
            newlitcol(3,3,t,l)
            output("-")
            newlitcol(3,4,t+1,l)
            newcl()

            #move F
            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(1,3,t,l)
            newlitcol(5,1,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(1,3,t,l)
            output("-")
            newlitcol(5,1,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(1,4,t,l)
            newlitcol(5,3,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(1,4,t,l)
            output("-")
            newlitcol(5,3,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(5,1,t,l)
            newlitcol(6,2,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(5,1,t,l)
            output("-")
            newlitcol(6,2,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(5,3,t,l)
            newlitcol(6,1,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(5,3,t,l)
            output("-")
            newlitcol(6,1,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(6,2,t,l)
            newlitcol(3,4,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(6,2,t,l)
            output("-")
            newlitcol(3,4,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(6,1,t,l)
            newlitcol(3,2,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(6,1,t,l)
            output("-")
            newlitcol(3,2,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(3,4,t,l)
            newlitcol(1,3,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(3,4,t,l)
            output("-")
            newlitcol(1,3,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(3,2,t,l)
            newlitcol(1,4,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(3,2,t,l)
            output("-")
            newlitcol(1,4,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(2,1,t,l)
            newlitcol(2,2,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(2,1,t,l)
            output("-")
            newlitcol(2,2,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(2,2,t,l)
            newlitcol(2,4,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(2,2,t,l)
            output("-")
            newlitcol(2,4,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(2,4,t,l)
            newlitcol(2,3,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(2,4,t,l)
            output("-")
            newlitcol(2,3,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,1)
            output("-")
            newlitcol(2,3,t,l)
            newlitcol(2,1,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,1)
            newlitcol(2,3,t,l)
            output("-")
            newlitcol(2,1,t+1,l)
            newcl()

            #move F2
            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(1,3,t,l)
            newlitcol(6,2,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(1,3,t,l)
            output("-")
            newlitcol(6,2,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(6,2,t,l)
            newlitcol(1,3,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(6,2,t,l)
            output("-")
            newlitcol(1,3,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(1,4,t,l)
            newlitcol(6,1,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(1,4,t,l)
            output("-")
            newlitcol(6,1,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(6,1,t,l)
            newlitcol(1,4,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(6,1,t,l)
            output("-")
            newlitcol(1,4,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(3,2,t,l)
            newlitcol(5,3,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(3,2,t,l)
            output("-")
            newlitcol(5,3,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(3,4,t,l)
            newlitcol(5,1,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(3,4,t,l)
            output("-")
            newlitcol(5,1,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(5,1,t,l)
            newlitcol(3,4,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(5,1,t,l)
            output("-")
            newlitcol(3,4,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(5,3,t,l)
            newlitcol(3,2,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(5,3,t,l)
            output("-")
            newlitcol(3,2,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(2,1,t,l)
            newlitcol(2,4,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(2,1,t,l)
            output("-")
            newlitcol(2,4,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(2,2,t,l)
            newlitcol(2,3,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(2,2,t,l)
            output("-")
            newlitcol(2,3,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(2,4,t,l)
            newlitcol(2,1,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(2,4,t,l)
            output("-")
            newlitcol(2,1,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,2)
            output("-")
            newlitcol(2,3,t,l)
            newlitcol(2,2,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,2)
            newlitcol(2,3,t,l)
            output("-")
            newlitcol(2,2,t+1,l)
            newcl()

            #move F*
            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(5,1,t,l)
            newlitcol(1,3,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(5,1,t,l)
            output("-")
            newlitcol(1,3,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(5,3,t,l)
            newlitcol(1,4,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(5,3,t,l)
            output("-")
            newlitcol(1,4,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(6,2,t,l)
            newlitcol(5,1,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(6,2,t,l)
            output("-")
            newlitcol(5,1,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(6,1,t,l)
            newlitcol(5,3,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(6,1,t,l)
            output("-")
            newlitcol(5,3,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(3,4,t,l)
            newlitcol(6,2,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(3,4,t,l)
            output("-")
            newlitcol(6,2,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(3,2,t,l)
            newlitcol(6,1,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(3,2,t,l)
            output("-")
            newlitcol(6,1,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(1,3,t,l)
            newlitcol(3,4,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(1,3,t,l)
            output("-")
            newlitcol(3,4,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(1,4,t,l)
            newlitcol(3,2,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(1,4,t,l)
            output("-")
            newlitcol(3,2,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(2,2,t,l)
            newlitcol(2,1,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(2,2,t,l)
            output("-")
            newlitcol(2,1,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(2,4,t,l)
            newlitcol(2,2,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(2,4,t,l)
            output("-")
            newlitcol(2,2,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(2,3,t,l)
            newlitcol(2,4,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(2,3,t,l)
            output("-")
            newlitcol(2,4,t+1,l)
            newcl()

            output("-")
            newlitmov(3,t,3)
            output("-")
            newlitcol(2,1,t,l)
            newlitcol(2,3,t+1,l)
            newcl()
            output("-")
            newlitmov(3,t,3)
            newlitcol(2,1,t,l)
            output("-")
            newlitcol(2,3,t+1,l)
            newcl()

    #not twice the same kind of movement in a row (3*(nb_moves-1) clauses)
    for t in range(11,10+nb_moves):
        for m in range(1,4):
            output("-")
            newlitmov(m,t,0)
            output("-")
            newlitmov(m,t+1,0)
            newcl()

#input: -filename: name of cnf file
#       -phase: selection strategy (string)
#output: -moves: list with moves to solve the Rubik's cube
#        -time: wall clock time in second for the sat solver
def rubiks_solve(filename, phase):
    if phase == "":
        command = "java -jar sat4j-sat.jar "+ filename
    else:
        command = "java -jar sat4j-sat.jar -S PHASE=" + phase +"LiteralSelectionStrategy "+ filename  
    process = subprocess.Popen(command, shell=True,
                               stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    out, err = process.communicate()
    
    out_split = out.split(b'\r\n')
    out_split.pop()
    time = out_split.pop()
    time = time.split(b' ').pop()
    time = time.decode("utf-8")

    table = [[0 for i in range(3)] for j in range(3)]
    table[0][0] = 'U'
    table[0][1] = 'U2'
    table[0][2] = 'U*'
    table[1][0] = 'L'
    table[1][1] = 'L2'
    table[1][2] = 'L*'
    table[2][0] = 'F'
    table[2][1] = 'F2'
    table[2][2] = 'F*'
    for line in out.split(b'\n'):
        line = line.decode("utf-8")
        if line == "" or line[0] == 'c':
            continue
        line = line.strip()
        if line[0] == 's':
            if line != 's SATISFIABLE':
                print("unsatisfiable")
                return [],time
            continue
        if line[0] == 'v':
            line = line[2:]
            units = line.split()
            if units.pop() != '0':
                exit("strange output from SAT solver:" + line + "\n")
            units = [int(x) for x in units if int(x) >= 0]

            final_state = 0
            for number in units:
                if (number//1000) == 65:
                    final_state = (number%100)-11
                    print("number of moves: " + str(final_state))

            moves = ["" for i in range(final_state)]
            for number in units:
                action = (number//10)%100-10
                if (number//10000) == 7 and action <= final_state:
                    moves[action-1] = table[(number//1000)%10-1][number%10-1]

            return moves,time
            
        exit("strange output from SAT solver:" + line + "\n")
        return [],time


# start of the main code
# first arg: name of the file that contains the Rubik's cube to solve
# second arg : maximum number of moves to solve the Rubik's cube (>= 0)
# third arg: selection strategy (Positive or Negative), nothing if default strategy
if len(sys.argv) < 2:
    exit("arguments missing: filename and maximum number of moves")

if len(sys.argv) < 3:
    exit("argument missing: maximum number of moves")

nb_moves = int(sys.argv[2])
if nb_moves < 0:
    exit("maximum number of moves must be non negative")

if nb_moves > 11:
    nb_moves = 11

file_name = 'rubiks'
if len(sys.argv) >= 4:
    file_name = sys.argv[3]
file_name = file_name + "_" + str(nb_moves)

rubiks = read_file(str(sys.argv[1]))
# print_rubiks(sys.stdout, rubiks)

# Changed: Where to save the dimacs file
if not os.path.exists("florian/dimacs"):
    os.makedirs("florian/dimacs")

myfile = open(f"florian/dimacs/{file_name}.dimacs", 'w')
myfile.write("p cnf "+str(73)+str(nb_moves+10)+str(3)+" "+str(nb_constraints(nb_moves))+"\n")
constraints(myfile, rubiks, nb_moves)
myfile.close()

# if len(sys.argv) == 3:
#     phase = ""
# else:
#     phase = sys.argv[3]


# Commented out the solving code, for experiments we only need the code to create the cnf files
# moves, time = rubiks_solve("rubiks.cnf", phase)
# print_moves(sys.stdout, moves)
# print("Solution found in " + time + " seconds")
